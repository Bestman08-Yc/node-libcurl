name: Publish

permissions:
  contents: write
  id-token: write

on:
  push:
    tags:
      - test-v*

jobs:
  Build:
    name: Build Package
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            setup: |
              sudo apt-get update
              sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
              export CC=aarch64-linux-gnu-gcc
              export CXX=aarch64-linux-gnu-g++
              export AR=aarch64-linux-gnu-ar
              export AS=aarch64-linux-gnu-as
              export LD=aarch64-linux-gnu-ld
              export STRIP=aarch64-linux-gnu-strip
              sudo cp /usr/bin/aarch64-linux-gnu-gcc /usr/bin/gcc
              sudo cp /usr/bin/aarch64-linux-gnu-g++ /usr/bin/g++
              sudo cp /usr/bin/aarch64-linux-gnu-ar /usr/bin/ar
              sudo cp /usr/bin/aarch64-linux-gnu-as /usr/bin/as
              sudo cp /usr/bin/aarch64-linux-gnu-ld /usr/bin/ld
              sudo cp /usr/bin/aarch64-linux-gnu-strip /usr/bin/strip
            arch: arm64
      
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
      - name: Setup Node
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 18
      - name: Setup Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: "3.9"
      - name: Setup env
        if: ${{ matrix.settings.setup }}
        shell: bash
        run: ${{ matrix.settings.setup }}
      - name: Install
        run: npm install --arch=${{ matrix.settings.arch }}
      - name: Gyp rebuild
        run: node ./scripts/rebuild.js --arch=${{ matrix.settings.arch }} && npx node-gyp rebuild --arch=${{ matrix.settings.arch }}
